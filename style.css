/* Reset default margin, padding, and box-sizing for all elements */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Basic styling for the body */
body {
  display: flex;
  min-height: 100vh;
  align-items: center;
  justify-content: center;
  background: aliceblue;
  font-family: cursive, sans-serif;
}

/* Main container for centering content */
.center-container {
  display: flex;
  padding: 1rem;
  width: fit-content;
  height: fit-content;
  position: relative;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Styling for the Tic Tac Toe grid */
.center-container .grid {
  display: grid;
  gap: 2px;
  overflow: hidden;
  user-select: none;
  border-radius: 11px;
  filter: drop-shadow(2px 4px 6px black);
  grid-template-rows: repeat(3, minmax(clamp(80px, 20vw, 150px), 1fr));
  grid-template-columns: repeat(3, minmax(clamp(80px, 20vw, 150px), 1fr));
}

/* Styling for individual cells in the grid */
.center-container .grid .cell {
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  border: 2px solid black;
  font-size: clamp(24px, 6vw, 77px);
}

/* Disable cursor pointer for disabled cells */
.center-container .grid .cell.disable {
  cursor: auto;
}

/* Remove borders for specific cells to create the Tic Tac Toe grid effect */
.center-container .grid .cell:first-child,
.center-container .grid .cell:nth-child(2),
.center-container .grid .cell:nth-child(3) {
  border-top: none;
}

.center-container .grid .cell:nth-child(3n + 1) {
  border-left: none;
}

.center-container .grid .cell:nth-child(3n + 3) {
  border-right: none;
}

.center-container .grid .cell:last-child,
.center-container .grid .cell:nth-child(7),
.center-container .grid .cell:nth-child(8) {
  border-bottom: none;
}

/* Styling for disabled grid and line elements */
.center-container .grid.disable,
.center-container .line {
  opacity: 0.3;
  background: #00000017;
}

/* Hover effect for active cells */
.center-container .grid:not(.disable) .cell:hover {
  background: #0000000a;
}

/* Ensure cells in disabled grid have no pointer cursor */
.center-container .grid.disable .cell {
  cursor: auto;
}

/* Styling for the message element */
.center-container .message-element {
  margin-top: 10px;
  font-weight: 800;
  color: #f1b931;
  padding: 3px 7rem;
  border-radius: 1rem;
  background: #07036dcf;
  font-size: clamp(18px, 4vw, 25px);
}

/* Base styling for the winning line element */
.center-container .line {
  top: 41%;
  width: 85%;
  display: none;
  height: 0.3rem;
  position: absolute;
  border-radius: 50%;
  background-color: black;
}

/* Winning line position classes */
.center-container .line.leftDiagonal {
  transform: rotate(45deg);
}

.center-container .line.rightDiagonal {
  transform: rotate(-45deg);
}

.center-container .line.horizontalMiddle {
  top: 41.1%;
  transform: rotate(0deg);
}

.center-container .line.horizontalTop {
  top: 15.5%;
}

.center-container .line.horizontalBottom {
  top: 66.6%;
}

.center-container .line.verticalLeft {
  left: -23.7%;
  transform: rotate(90deg);
}

.center-container .line.verticalMiddle {
  transform: rotate(90deg);
}

.center-container .line.verticalRight {
  left: 38.9%;
  transform: rotate(90deg);
}

/* Styling for the reset button */
.center-container .reset-game-btn {
  border: none;
  outline: none;
  cursor: pointer;
  margin-top: 10px;
  font-weight: 700;
  padding: 11px 28px;
  border-radius: 12px;
  transition: all 0.3s;
  font-size: clamp(16px, 3vw, 22px);
}

/* Hidden state for the reset button */
.center-container .reset-game-btn.hidden {
  opacity: 0;
  user-select: none;
  visibility: hidden;
  pointer-events: none;
}

/* Hover and active states for the reset button */
.center-container .reset-game-btn:hover {
  transform: scale(1.1);
}

.center-container .reset-game-btn:active {
  transform: scale(0.9);
}
